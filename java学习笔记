第十章
1、父类的方法可以拥有，但使用受权限修饰符约束。
2、重写父类方法时的限定规则及原因？
  限定规则包括但不限于：重写父类方法时，修改方法的修饰权限只能从小的范围到大的范围改变；
  重写的返回值类型必须是父类中同意方法返回值类型的子类。
    原因？
3、类加载和实例化类的过程：https://www.cnblogs.com/cjm09/p/9420692.html。在实例化过程中，构造函数隐式三步中，执行super（）父类构造函数时，也需要
   对父类构造函数进行隐式三步。
   不管是不是实例化对象的过程，执行构造函数时，都会执行隐式三步。http://www.vcchar.com/forum.php?mod=viewthread&tid=26024
4、jvm内存堆、栈、方法区：https://www.cnblogs.com/heyanan/p/6125030.html
5、object类的getClass()方法默认包含（this）。当一个类转换为字符串或字符串连接时，将自动调用的toString()方法。
6、equals()方法在object类中与“==”一致，要比较对象内容而非引用地址，则需重写此方法。
7、向上转型：https://blog.csdn.net/huyuyang6688/article/details/42566043
  子类对象时父类的一个实例；向下转型：父类对象不一定是子类的实例，直接赋予会发生编译器错误，需要使用显示类型转换，向编译器知名父类对象转换为哪一类子类对象。
8、方法的重载：区别于方法的重写，依据参数类型不同、参数个数不同、参数顺序不同构成重载。注：在同一个类中允许同时存在一个以上的同名方法。
9、多态：定义一个父类，让他处理所有继承该类的对象，根据“向上转型”原则可以使每一个继承父类的子类作为（父类对象格式的）形参传入父类方法中处理。
  特点：a.无需在所有子类中重写父类的方法实现特性b.只需将子类传入父类方法，父类依据不同子类分情况执行。
10、什么时候使用抽象类：https://www.cnblogs.com/lcxBlog/p/4886385.html
11、java 静态变量和方法中new自己的问题？？？？？？？？？
12、静态方法的三种调用方式：https://blog.csdn.net/weixin_42247720/article/details/81051276
13、内存中类成员变量存储在哪里？成员方法存储在哪里？和父类的有什么关系？
14、方法在内存中执行的过程？
15、异常：
  a.当程序不进行异常捕获或处理时，用默认异常处理，输出异常信息
  b.当程序使用try...catch处理或throws抛出异常时，try代码块部分不会像默认处理一样输出错误信息，而是交给catch进行匹配处理。
  c.多个catch代码块的顺序问题：https://blog.csdn.net/yasi_xi/article/details/23871867；
16、TreeSet类实现的集合中对象必须实现Comparable接口，重写接口的compare to方法，compare to方法介绍：https://blog.csdn.net/ysj4428/article/details/81195846
17、list、set、map的区别： https://www.cnblogs.com/IvesHe/p/6108933.html
18、hashmap中存储相同key值的问题，先对比hashcode，再对比相等或equal。都相同就覆盖，不同就存储。
    https://blog.csdn.net/intersting/article/details/72627353
    Java中的hashCode方法就是根据一定的规则将与对象相关的信息（比如对象的存储地址，对象的字段等）映射成一个数值，这个数值称作为散列值。
    https://www.cnblogs.com/dolphin0520/p/3681042.html
19、java反射Class类的介绍：https://www.cnblogs.com/bethunebtj/p/4680532.html。
    纠正文章中一处错误，getSuperclass()方法是Class类的方法，只能由Class类的对象进行调用。不可以用某个类的对象调用。如文中第二种方法中的s1来调用是错的。
20、判断某个数据s与一组数据a[]任一个均不相同。
    （1）基本思路：此事件的表述为s！=a1 && s！=a2 && s！=a3 …… &&s！=an。问题在于需要提前拿到a[]中所有数据再在if中判断，很难以index来获取到每个数据，
    通过这样的表达式难以实现。
    （2）如何让目标更接近已知可用的；循环可以获得每个数据，循环每次只取出a[]中一个数据进行判断，因此需要设置一个变量在循环中发生状态改变来表述事件。
21、Random类：https://www.cnblogs.com/weink1215/p/4433790.html
    在该代码中，对象r1和r2使用的种子数都是10，则这两个对象相同次数生成的随机数是完全相同的。
    如果想避免出现随机数字相同的情况，则需要注意，无论项目中需要生成多少个随机数字，都只使用一个Random对象即可（static）。
22、在无法跳出循环的情况下，如何使满足某一条件后的操作仅在初次满足条件时执行一次，之后虽满足条件，但不再执行？
    通过设置状态flag变量，在初次满足条件时，flag判断通过，在操作中改变flag状态，使之后的flag判断不通过，以屏蔽之后的多次满足条件。
23、java中=号赋值时，基础数据类型为直接赋值，而引用数据类型是将内存地址赋给目标（）。https://www.cnblogs.com/nicheken/p/7499475.html
    引用传递与值传递：https://www.cnblogs.com/boboooo/p/9066831.html
24，三次握手和四次挥手：HTTPS：//www.cnblogs.com/shujuxiong/p/9043832.html
25，UDP协议过程解析：https://www.cnblogs.com/0Nullptr/articles/6718179.html
26、Integer与int比较：==和equals；https://blog.csdn.net/andyzhaojianhui/article/details/84324466
27、java scanner读取输入例子：https://blog.csdn.net/yzh372685776/article/details/51965436
28、switch-case语句，从一个入口进入后，将不再判断，会执行语句（包括default中语句）直到遇到break；只要程序能执行到default语句，则一定会执行default中的语句。
29、接口体内只能声明常量字段和抽象方法，并且被隐式声明为public，static，final.
30、final修饰的属性变量必须在定义的时候或者构造函数中被初始化，static final修饰的变量必须在定义的时候进行初始化。
31、java方法区详解：https://blog.csdn.net/dshf_1/article/details/87171171
32、java编译期间的操作；https://blog.csdn.net/LVXIANGAN/article/details/82985312
33、重写：返回值和形参不能改变；重载：方法名相同，参数列表必须不同。
34、要想访问到一个类（对象）的成员变量或属性，需要：1、类与类之间满足成员变量访问修饰符的范围；2、所实例化的对象本身拥有此属性且可以访问到（继承且可见）。
35、用户自定义异常可以是运行时异常也可以时非运行时异常。https://www.cnblogs.com/AlanLee/p/6104492.html
36、异常处理的两种方式：try...catch；throw，throws。及其处理流程。try...catch语法规则：https://blog.csdn.net/youngstar70/article/details/62227032。
37、java同步机制以及常量池内存介绍：https://www.cnblogs.com/lipeineng/p/5917439.html。其中的例子很重要，对于常量在内存中的存储。
    对于局部变量，如果是基本类型，会把值直接存储在栈；
    https://blog.csdn.net/zhangsanfeng2009/article/details/80900963
38、String的两种赋值方式的解释：https://blog.csdn.net/weixin_34413802/article/details/88009934
    https://www.zhihu.com/question/29884421/answer/113785601
